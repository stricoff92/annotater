"""
Django settings for annotater project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
from string import ascii_letters, digits
import os.path


from annotater import applocals


ALLOWED_TOKEN_CHARS = frozenset(ascii_letters + digits)



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
print({"BASE_DIR":BASE_DIR})

ABSOLUTE_BASE_URL = applocals.ABSOLUTE_BASE_URL

SECRET_KEY = applocals.SECRET_KEY
DEBUG = applocals.DEBUG
ENV = applocals.ENV
ALLOWED_HOSTS = applocals.ALLOWED_HOSTS

SESSION_COOKIE_SECURE = not DEBUG
CSRF_COOKIE_SECURE = not DEBUG


SESSION_COOKIE_AGE = 60 * 60 * 24 * 30 # (30 days)


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'memetext.apps.MemetextConfig',
    'website.apps.WebsiteConfig',
    'django_otp',
    'django_otp.plugins.otp_static',
    'django_otp.plugins.otp_totp',
    'two_factor',
]

if DEBUG:
    print("Adding django_extensions")
    INSTALLED_APPS.append('django_extensions')

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django_otp.middleware.OTPMiddleware',
    'two_factor.middleware.threadlocals.ThreadLocals',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'annotater.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'annotater.wsgi.application'


if not DEBUG:
    # if not debugging, disable the renderer
    REST_FRAMEWORK = {
        'DEFAULT_RENDERER_CLASSES': (
            'rest_framework.renderers.JSONRenderer',
        )
    }



# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': applocals.DB_NAME,
        'HOST': applocals.DB_HOSTNAME,
        'USER': applocals.DB_USERNAME,
        'PASSWORD': applocals.DB_PASSWORD,
        'PORT': '3306',
        'OPTIONS': {'charset': 'utf8mb4'},
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [] if DEBUG else [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


LOGIN_URL = "/login-with-cred"
LOGIN_REDIRECT_URL = "/"


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "memetext/templates/static"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Session keys used to store two_factor secret keys. These keys are generated when
# a user is registering a device for 2FA
TFA_QR_SESSION_SECRET_KEY = 'django_two_factor-qr_secret_key'
TFA_QR_SESSION_SECRET_KEY_HEX = TFA_QR_SESSION_SECRET_KEY + "_hex"

TFA_SMS_SESSION_SECRET_KEY = 'django_two_factor-sms_secret_key'
TFA_SMS_SESSION_SECRET_KEY_HEX = TFA_SMS_SESSION_SECRET_KEY + "_hex"



MEMETEXT_S3_BUCKET = applocals.MEMETEXT_S3_BUCKET
AWS_SECRET_ACCESS_KEY = applocals.AWS_SECRET_ACCESS_KEY
AWS_ACCESS_KEY_ID = applocals.AWS_ACCESS_KEY_ID

